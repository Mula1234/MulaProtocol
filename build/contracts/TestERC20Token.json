{
  "contractName": "TestERC20Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600981526020017f546f6b656e20302e3100000000000000000000000000000000000000000000008152506000908051906020019062000051929190620001d4565b506020604051908101604052806000815250600190805190602001906200007a929190620001d4565b50602060405190810160405280600081525060029080519060200190620000a3929190620001d4565b506000600360006101000a81548160ff021916908360ff1602179055506000600455348015620000d257600080fd5b5060405162001091380380620010918339810180604052810190808051820192919060200180518201929190602001805190602001909291905050508282600080835111801562000124575060008251115b15156200013057600080fd5b826001908051906020019062000148929190620001d4565b50816002908051906020019062000161929190620001d4565b5080600360006101000a81548160ff021916908360ff1602179055505050508060048190555080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505062000283565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021757805160ff191683800117855562000248565b8280016001018555821562000248579182015b82811115620002475782518255916020019190600101906200022a565b5b5090506200025791906200025b565b5090565b6200028091905b808211156200027c57600081600090555060010162000262565b5090565b90565b610dfe80620002936000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100a9578063095ea7b31461013957806318160ddd1461019e57806323b872dd146101c9578063313ce5671461024e5780635a3b7e421461027f57806370a082311461030f57806395d89b4114610366578063a9059cbb146103f6578063dd62ed3e1461045b575b600080fd5b3480156100b557600080fd5b506100be6104d2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100fe5780820151818401526020810190506100e3565b50505050905090810190601f16801561012b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014557600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610570565b604051808215151515815260200191505060405180910390f35b3480156101aa57600080fd5b506101b3610736565b6040518082815260200191505060405180910390f35b3480156101d557600080fd5b50610234600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061073c565b604051808215151515815260200191505060405180910390f35b34801561025a57600080fd5b50610263610a48565b604051808260ff1660ff16815260200191505060405180910390f35b34801561028b57600080fd5b50610294610a5b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d45780820151818401526020810190506102b9565b50505050905090810190601f1680156103015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031b57600080fd5b50610350600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610af9565b6040518082815260200191505060405180910390f35b34801561037257600080fd5b5061037b610b11565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103bb5780820151818401526020810190506103a0565b50505050905090810190601f1680156103e85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561040257600080fd5b50610441600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610baf565b604051808215151515815260200191505060405180910390f35b34801561046757600080fd5b506104bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d76565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105685780601f1061053d57610100808354040283529160200191610568565b820191906000526020600020905b81548152906001019060200180831161054b57829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156105af57600080fd5b600083148061063a57506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561064557600080fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b60045481565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561077b57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107b857600080fd5b61083e600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610d9b565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610907600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610d9b565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610993600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610db4565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a36001925050509392505050565b600360009054906101000a900460ff1681565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af15780601f10610ac657610100808354040283529160200191610af1565b820191906000526020600020905b815481529060010190602001808311610ad457829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ba75780601f10610b7c57610100808354040283529160200191610ba7565b820191906000526020600020905b815481529060010190602001808311610b8a57829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610bee57600080fd5b610c37600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610d9b565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cc3600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610db4565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000818310151515610da957fe5b818303905092915050565b6000808284019050838110151515610dc857fe5b80915050929150505600a165627a7a723058206a527bd367e8a8867b838a1d04509d7c21ea3342637b38093c3872f04782585b0029",
  "deployedBytecode": "0x6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100a9578063095ea7b31461013957806318160ddd1461019e57806323b872dd146101c9578063313ce5671461024e5780635a3b7e421461027f57806370a082311461030f57806395d89b4114610366578063a9059cbb146103f6578063dd62ed3e1461045b575b600080fd5b3480156100b557600080fd5b506100be6104d2565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100fe5780820151818401526020810190506100e3565b50505050905090810190601f16801561012b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014557600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610570565b604051808215151515815260200191505060405180910390f35b3480156101aa57600080fd5b506101b3610736565b6040518082815260200191505060405180910390f35b3480156101d557600080fd5b50610234600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061073c565b604051808215151515815260200191505060405180910390f35b34801561025a57600080fd5b50610263610a48565b604051808260ff1660ff16815260200191505060405180910390f35b34801561028b57600080fd5b50610294610a5b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d45780820151818401526020810190506102b9565b50505050905090810190601f1680156103015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031b57600080fd5b50610350600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610af9565b6040518082815260200191505060405180910390f35b34801561037257600080fd5b5061037b610b11565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103bb5780820151818401526020810190506103a0565b50505050905090810190601f1680156103e85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561040257600080fd5b50610441600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610baf565b604051808215151515815260200191505060405180910390f35b34801561046757600080fd5b506104bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d76565b6040518082815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105685780601f1061053d57610100808354040283529160200191610568565b820191906000526020600020905b81548152906001019060200180831161054b57829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156105af57600080fd5b600083148061063a57506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b151561064557600080fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a3600191505092915050565b60045481565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561077b57600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156107b857600080fd5b61083e600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610d9b565b600660008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610907600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610d9b565b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610993600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205485610db4565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a36001925050509392505050565b600360009054906101000a900460ff1681565b60008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af15780601f10610ac657610100808354040283529160200191610af1565b820191906000526020600020905b815481529060010190602001808311610ad457829003601f168201915b505050505081565b60056020528060005260406000206000915090505481565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ba75780601f10610b7c57610100808354040283529160200191610ba7565b820191906000526020600020905b815481529060010190602001808311610b8a57829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610bee57600080fd5b610c37600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610d9b565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cc3600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484610db4565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b6000818310151515610da957fe5b818303905092915050565b6000808284019050838110151515610dc857fe5b80915050929150505600a165627a7a723058206a527bd367e8a8867b838a1d04509d7c21ea3342637b38093c3872f04782585b0029",
  "sourceMap": "98:253:22:-;;;182:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;224:23;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;253:25;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;308:1;284:25;;;;;;;;;;;;;;;;;;;;344:1;315:30;;142:207:22;8:9:-1;5:2;;;30:1;27;20:12;5:2;142:207:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:5;254:7;263:1;942::11;926:5;920:19;:23;:52;;;;;971:1;953:7;947:21;:25;920:52;912:61;;;;;;;;1009:5;1002:4;:12;;;;;;;;;;;;:::i;:::-;;1033:7;1024:6;:16;;;;;;;;;;;;:::i;:::-;;1061:9;1050:8;;:20;;;;;;;;;;;;;;;;;;828:249;;;294:7:22;280:11;:21;;;;335:7;311:9;:21;321:10;311:21;;;;;;;;;;;;;;;:31;;;;142:207;;;98:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "98:253:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:23:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;224:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:454;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3151:454:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:30:11;;;;;;;;;;;;;;;;;;;;;;;2039:442;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2039:442:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;284:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;182:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;182:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;253:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:324;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1359:324:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3151:454::-;3265:12;3238:8;455:1:18;435:22;;:8;:22;;;;427:31;;;;;;;;3436:1:11;3426:6;:11;:51;;;;3476:1;3441:9;:21;3451:10;3441:21;;;;;;;;;;;;;;;:31;3463:8;3441:31;;;;;;;;;;;;;;;;:36;3426:51;3418:60;;;;;;;;3523:6;3489:9;:21;3499:10;3489:21;;;;;;;;;;;;;;;:31;3511:8;3489:31;;;;;;;;;;;;;;;:40;;;;3560:8;3539:38;;3548:10;3539:38;;;3570:6;3539:38;;;;;;;;;;;;;;;;;;3594:4;3587:11;;3151:454;;;;;:::o;315:30::-;;;;:::o;2039:442::-;2191:12;2141:5;455:1:18;435:22;;:8;:22;;;;427:31;;;;;;;;2169:3:11;455:1:18;435:22;;:8;:22;;;;427:31;;;;;;;;2250:45:11;2258:9;:16;2268:5;2258:16;;;;;;;;;;;;;;;:28;2275:10;2258:28;;;;;;;;;;;;;;;;2288:6;2250:7;:45::i;:::-;2219:9;:16;2229:5;2219:16;;;;;;;;;;;;;;;:28;2236:10;2219:28;;;;;;;;;;;;;;;:76;;;;2324:33;2332:9;:16;2342:5;2332:16;;;;;;;;;;;;;;;;2350:6;2324:7;:33::i;:::-;2305:9;:16;2315:5;2305:16;;;;;;;;;;;;;;;:52;;;;2384:31;2392:9;:14;2402:3;2392:14;;;;;;;;;;;;;;;;2408:6;2384:7;:31::i;:::-;2367:9;:14;2377:3;2367:14;;;;;;;;;;;;;;;:48;;;;2441:3;2425:28;;2434:5;2425:28;;;2446:6;2425:28;;;;;;;;;;;;;;;;;;2470:4;2463:11;;468:1:18;2039:442:11;;;;;;:::o;284:25::-;;;;;;;;;;;;;:::o;182:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;351:45::-;;;;;;;;;;;;;;;;;:::o;253:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1359:324::-;1464:12;1442:3;455:1:18;435:22;;:8;:22;;;;427:31;;;;;;;;1516:38:11;1524:9;:21;1534:10;1524:21;;;;;;;;;;;;;;;;1547:6;1516:7;:38::i;:::-;1492:9;:21;1502:10;1492:21;;;;;;;;;;;;;;;:62;;;;1581:31;1589:9;:14;1599:3;1589:14;;;;;;;;;;;;;;;;1605:6;1581:7;:31::i;:::-;1564:9;:14;1574:3;1564:14;;;;;;;;;;;;;;;:48;;;;1643:3;1622:33;;1631:10;1622:33;;;1648:6;1622:33;;;;;;;;;;;;;;;;;;1672:4;1665:11;;1359:324;;;;;:::o;402:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1242:130:18:-;1306:7;1338:2;1332;:8;;1325:16;;;;;;1363:2;1358;:7;1351:14;;1242:130;;;;:::o;873:152::-;937:7;956:9;973:2;968;:7;956:19;;997:2;992:1;:7;;985:15;;;;;;1017:1;1010:8;;873:152;;;;;:::o",
  "source": "pragma solidity ^0.4.11;\nimport '../ERC20Token.sol';\n\n/*\n    Test token with predefined supply\n*/\ncontract TestERC20Token is ERC20Token {\n    function TestERC20Token(string _name, string _symbol, uint256 _supply)\n        public\n        ERC20Token(_name, _symbol, 0)\n    {\n        totalSupply = _supply;\n        balanceOf[msg.sender] = _supply;\n    }\n}\n",
  "sourcePath": "D:\\EthereumProjects\\work\\mulaProtocol\\contracts\\bancor\\contracts\\helpers\\TestERC20Token.sol",
  "ast": {
    "absolutePath": "/D/EthereumProjects/work/mulaProtocol/contracts/bancor/contracts/helpers/TestERC20Token.sol",
    "exportedSymbols": {
      "TestERC20Token": [
        7408
      ]
    },
    "id": 7409,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7378,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "/D/EthereumProjects/work/mulaProtocol/contracts/bancor/contracts/ERC20Token.sol",
        "file": "../ERC20Token.sol",
        "id": 7379,
        "nodeType": "ImportDirective",
        "scope": 7409,
        "sourceUnit": 6239,
        "src": "25:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7380,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6238,
              "src": "125:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$6238",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 7381,
            "nodeType": "InheritanceSpecifier",
            "src": "125:10:22"
          }
        ],
        "contractDependencies": [
          6238,
          7165,
          7704
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7408,
        "linearizedBaseContracts": [
          7408,
          6238,
          7165,
          7704
        ],
        "name": "TestERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7406,
              "nodeType": "Block",
              "src": "270:79:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7395,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6016
                      ],
                      "referencedDeclaration": 6016,
                      "src": "280:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7396,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7387,
                      "src": "294:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "280:21:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7398,
                  "nodeType": "ExpressionStatement",
                  "src": "280:21:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7399,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6020
                        ],
                        "referencedDeclaration": 6020,
                        "src": "311:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7402,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8329,
                          "src": "321:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "321:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "311:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7403,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7387,
                      "src": "335:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7405,
                  "nodeType": "ExpressionStatement",
                  "src": "311:31:22"
                }
              ]
            },
            "documentation": null,
            "id": 7407,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7390,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7383,
                    "src": "247:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7391,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7385,
                    "src": "254:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 7392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "263:1:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 7393,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7389,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6238,
                  "src": "236:10:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$6238_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "236:29:22"
              }
            ],
            "name": "TestERC20Token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7383,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "166:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7382,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "166:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7385,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "180:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7384,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7387,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "196:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "165:47:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 7394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:22"
            },
            "scope": 7408,
            "src": "142:207:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7409,
        "src": "98:253:22"
      }
    ],
    "src": "0:352:22"
  },
  "legacyAST": {
    "absolutePath": "/D/EthereumProjects/work/mulaProtocol/contracts/bancor/contracts/helpers/TestERC20Token.sol",
    "exportedSymbols": {
      "TestERC20Token": [
        7408
      ]
    },
    "id": 7409,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7378,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:22"
      },
      {
        "absolutePath": "/D/EthereumProjects/work/mulaProtocol/contracts/bancor/contracts/ERC20Token.sol",
        "file": "../ERC20Token.sol",
        "id": 7379,
        "nodeType": "ImportDirective",
        "scope": 7409,
        "sourceUnit": 6239,
        "src": "25:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7380,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6238,
              "src": "125:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$6238",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 7381,
            "nodeType": "InheritanceSpecifier",
            "src": "125:10:22"
          }
        ],
        "contractDependencies": [
          6238,
          7165,
          7704
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7408,
        "linearizedBaseContracts": [
          7408,
          6238,
          7165,
          7704
        ],
        "name": "TestERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7406,
              "nodeType": "Block",
              "src": "270:79:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7395,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6016
                      ],
                      "referencedDeclaration": 6016,
                      "src": "280:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7396,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7387,
                      "src": "294:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "280:21:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7398,
                  "nodeType": "ExpressionStatement",
                  "src": "280:21:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7399,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6020
                        ],
                        "referencedDeclaration": 6020,
                        "src": "311:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7402,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8329,
                          "src": "321:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "321:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "311:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7403,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7387,
                      "src": "335:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7405,
                  "nodeType": "ExpressionStatement",
                  "src": "311:31:22"
                }
              ]
            },
            "documentation": null,
            "id": 7407,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7390,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7383,
                    "src": "247:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7391,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7385,
                    "src": "254:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 7392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "263:1:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 7393,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7389,
                  "name": "ERC20Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6238,
                  "src": "236:10:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Token_$6238_$",
                    "typeString": "type(contract ERC20Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "236:29:22"
              }
            ],
            "name": "TestERC20Token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7383,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "166:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7382,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "166:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7385,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "180:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7384,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7387,
                  "name": "_supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 7407,
                  "src": "196:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "165:47:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 7394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:22"
            },
            "scope": 7408,
            "src": "142:207:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7409,
        "src": "98:253:22"
      }
    ],
    "src": "0:352:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-02T11:24:08.551Z"
}